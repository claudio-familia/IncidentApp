// <auto-generated />
using System;
using IncidentApp.Models.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IncidentApp.Migrations
{
    [DbContext(typeof(IncidentContext))]
    [Migration("20201018160802_UpdateSeedUser")]
    partial class UpdateSeedUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IncidentApp.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DepartamentoId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnName("CreadoPor")
                        .HasColumnType("int");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("Borrado")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Nombre")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Status")
                        .HasColumnName("Estatus")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnName("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnName("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<int?>("UpdaterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("UpdaterId");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("IncidentApp.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EmpleadoId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BornDate")
                        .HasColumnName("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnName("Cedula")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnName("CreadoPor")
                        .HasColumnType("int");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnName("Correo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("Borrado")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("Apellido")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Nombre")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("Telefono")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("PositionId")
                        .HasColumnName("PuestoId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnName("Estatus")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnName("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnName("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<int?>("UpdaterId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("PositionId");

                    b.HasIndex("UpdaterId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("IncidentApp.Models.Incident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IncidenteId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssignedUserId")
                        .HasColumnName("UsuarioAsignadoId")
                        .HasColumnType("int");

                    b.Property<string>("ClosedComment")
                        .HasColumnName("ComentarioCierre")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("ClosedDate")
                        .HasColumnName("FechaCierre")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnName("CreadoPor")
                        .HasColumnType("int");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnName("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("Borrado")
                        .HasColumnType("bit");

                    b.Property<int>("PriorityId")
                        .HasColumnName("PrioridadId")
                        .HasColumnType("int");

                    b.Property<int>("ReportedUserId")
                        .HasColumnName("UsuarioReportaId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnName("Estatus")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("Titulo")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnName("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnName("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<int?>("UpdaterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssignedUserId")
                        .IsUnique();

                    b.HasIndex("CreatorId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PriorityId");

                    b.HasIndex("ReportedUserId")
                        .IsUnique();

                    b.HasIndex("UpdaterId");

                    b.ToTable("Incidentes");
                });

            modelBuilder.Entity("IncidentApp.Models.IncidentHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("HistorialIncidenteId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnName("Comentario")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnName("CreadoPor")
                        .HasColumnType("int");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int>("IncidentId")
                        .HasColumnName("IncidenteId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("Borrado")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnName("Estatus")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnName("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnName("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<int?>("UpdaterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("IncidentId");

                    b.HasIndex("UpdaterId");

                    b.ToTable("HistorialIncidentes");
                });

            modelBuilder.Entity("IncidentApp.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PuestoId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnName("CreadoPor")
                        .HasColumnType("int");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnName("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("Borrado")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Nombre")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Status")
                        .HasColumnName("Estatus")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnName("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnName("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<int?>("UpdaterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UpdaterId");

                    b.ToTable("Puestos");
                });

            modelBuilder.Entity("IncidentApp.Models.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PrioridadId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnName("CreadoPor")
                        .HasColumnType("int");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("Borrado")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SLAId")
                        .HasColumnName("SLAId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnName("Estatus")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnName("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnName("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<int?>("UpdaterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("SLAId");

                    b.HasIndex("UpdaterId");

                    b.ToTable("Prioridades");
                });

            modelBuilder.Entity("IncidentApp.Models.SLA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SLAId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnName("CreadoPor")
                        .HasColumnType("int");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Hours")
                        .HasColumnName("CantidadHoras")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("Borrado")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnName("Estatus")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnName("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnName("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<int?>("UpdaterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("UpdaterId");

                    b.ToTable("SLAs");
                });

            modelBuilder.Entity("IncidentApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EmpleadoId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnName("CreadoPor")
                        .HasColumnType("int");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("Borrado")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("Contrasena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnName("Estatus")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnName("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnName("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<int?>("UpdaterId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("NombreUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("UpdaterId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0,
                            IsDeleted = false,
                            Password = "ylwYeR9FMHE=",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedBy = 0,
                            Username = "Administrator"
                        });
                });

            modelBuilder.Entity("IncidentApp.Models.Department", b =>
                {
                    b.HasOne("IncidentApp.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("IncidentApp.Models.User", "Updater")
                        .WithMany()
                        .HasForeignKey("UpdaterId");
                });

            modelBuilder.Entity("IncidentApp.Models.Employee", b =>
                {
                    b.HasOne("IncidentApp.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("IncidentApp.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IncidentApp.Models.User", "Updater")
                        .WithMany()
                        .HasForeignKey("UpdaterId");

                    b.HasOne("IncidentApp.Models.User", "User")
                        .WithOne("Employee")
                        .HasForeignKey("IncidentApp.Models.Employee", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IncidentApp.Models.Incident", b =>
                {
                    b.HasOne("IncidentApp.Models.User", "AssignedUser")
                        .WithOne()
                        .HasForeignKey("IncidentApp.Models.Incident", "AssignedUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("IncidentApp.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("IncidentApp.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IncidentApp.Models.Priority", "Priority")
                        .WithMany()
                        .HasForeignKey("PriorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IncidentApp.Models.User", "ReportedUser")
                        .WithOne()
                        .HasForeignKey("IncidentApp.Models.Incident", "ReportedUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("IncidentApp.Models.User", "Updater")
                        .WithMany()
                        .HasForeignKey("UpdaterId");
                });

            modelBuilder.Entity("IncidentApp.Models.IncidentHistory", b =>
                {
                    b.HasOne("IncidentApp.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("IncidentApp.Models.Incident", "Incident")
                        .WithMany("IncidentHistory")
                        .HasForeignKey("IncidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IncidentApp.Models.User", "Updater")
                        .WithMany()
                        .HasForeignKey("UpdaterId");
                });

            modelBuilder.Entity("IncidentApp.Models.Position", b =>
                {
                    b.HasOne("IncidentApp.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("IncidentApp.Models.Department", "Department")
                        .WithMany("Positions")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IncidentApp.Models.User", "Updater")
                        .WithMany()
                        .HasForeignKey("UpdaterId");
                });

            modelBuilder.Entity("IncidentApp.Models.Priority", b =>
                {
                    b.HasOne("IncidentApp.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("IncidentApp.Models.SLA", "SLA")
                        .WithMany()
                        .HasForeignKey("SLAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IncidentApp.Models.User", "Updater")
                        .WithMany()
                        .HasForeignKey("UpdaterId");
                });

            modelBuilder.Entity("IncidentApp.Models.SLA", b =>
                {
                    b.HasOne("IncidentApp.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("IncidentApp.Models.User", "Updater")
                        .WithMany()
                        .HasForeignKey("UpdaterId");
                });

            modelBuilder.Entity("IncidentApp.Models.User", b =>
                {
                    b.HasOne("IncidentApp.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("IncidentApp.Models.User", "Updater")
                        .WithMany()
                        .HasForeignKey("UpdaterId");
                });
#pragma warning restore 612, 618
        }
    }
}
